<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.disney</groupId>
	<artifactId>miguelmunoz.challenge</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>miguelmunoz.challenge</name>
	<description>Pizza Order Coding Challenge</description>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<maven.compiler.source>${java.version}</maven.compiler.source>
		<maven.compiler.target>${java.version}</maven.compiler.target>
		<springfox-version>2.7.0</springfox-version>
	</properties>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.10.RELEASE</version>
		<relativePath/> <!-- lookup parent from repository -->
	</parent>

	<build>
		<sourceDirectory>src/main/java</sourceDirectory>
		<plugins>
<!--			<plugin>-->
<!--				<groupId>org.springframework.boot</groupId>-->
<!--				<artifactId>spring-boot-maven-plugin</artifactId>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<goals>-->
<!--							<goal>repackage</goal>-->
<!--						</goals>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->
			
			<!-- I tried the swagger plug-in, but it doesn't let me set the options I need to set. I can't specify Java 8, for example, -->
			<!-- so it uses Joda time rather than the new Java 8 classes. -->
<!--			<plugin>-->
<!--				<groupId>io.swagger</groupId>-->
<!--				<artifactId>swagger-codegen-maven-plugin</artifactId>-->
<!--				<version>2.3.1</version>-->
<!--				<executions>-->
<!--					<execution>-->
<!--						<goals>-->
<!--							<goal>generate</goal>-->
<!--						</goals>-->
<!--						<configuration>-->
<!--							<inputSpec>${project.basedir}/swagger.yaml</inputSpec>-->
<!--							<output>${project.basedir}/src/gen/java</output>-->
<!--							<language>spring</language>-->
<!--							<generateSupportingFiles>false</generateSupportingFiles>-->
<!--							<withXml>false</withXml>-->
<!--							<configOptions>-->
<!--								<sourceFolder>src/gen/java</sourceFolder>-->
<!--							</configOptions>-->
<!--						</configuration>-->
<!--					</execution>-->
<!--				</executions>-->
<!--			</plugin>-->
		</plugins>
	</build>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-jersey</artifactId>
		</dependency>
		<!--<dependency>-->
		<!--<groupId>org.apache.cxf</groupId>-->
		<!--<artifactId>cxf-spring-boot-starter-jaxrs</artifactId>-->
		<!--<version>3.1.11</version>-->
		<!--</dependency>-->

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>

		<!--SpringFox dependencies -->
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger2</artifactId>
			<version>${springfox-version}</version>
		</dependency>
		<dependency>
			<groupId>io.springfox</groupId>
			<artifactId>springfox-swagger-ui</artifactId>
			<version>${springfox-version}</version>
		</dependency>

		<!--&lt;!&ndash;For Java 9, according to-->
		<!--https://stackoverflow.com/questions/43574426/how-to-resolve-java-lang-noclassdeffounderror-javax-xml-bind-jaxbexception-in-j&ndash;&gt;-->
		<!--&lt;!&ndash;Another longer solution is provided for Java 11 in that same stackoverflow question.&ndash;&gt;-->
		<!--<dependency>-->
		<!--<groupId>javax.xml.bind</groupId>-->
		<!--<artifactId>jaxb-api</artifactId>-->
		<!--<version>2.3.0</version>-->
		<!--</dependency>-->

		<!--<dependency>-->
		<!--<groupId>com.github.joschi.jackson</groupId>-->
		<!--<artifactId>jackson-datatype-threetenbp</artifactId>-->
		<!--<version>2.6.4</version>-->
		<!--</dependency>-->

		<!--		For JDK 11-->

		<!-- API, java.xml.bind module -->
		<dependency>
			<groupId>jakarta.xml.bind</groupId>
			<artifactId>jakarta.xml.bind-api</artifactId>
			<version>2.3.2</version>
		</dependency>

		<!-- Runtime, com.sun.xml.bind module -->
		<dependency>
			<groupId>org.glassfish.jaxb</groupId>
			<artifactId>jaxb-runtime</artifactId>
			<version>2.3.2</version>
		</dependency>

		<dependency>
			<!--Handles serialization/deserialization of new Java Date/Time classes-->
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-jsr310</artifactId>
			<version>2.10.1</version> <!-- Was 2.6.5-->
		</dependency>

		<!-- Bean Validation API support -->
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<version>1.1.0.Final</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-annotations</artifactId>
			<version>2.10.1</version>
		</dependency>

		<!--Actuator-->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-actuator-docs</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>

	</dependencies>



</project>
